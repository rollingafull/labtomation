---
# ===============================================================================
# Role: terraform
# Description: Installs HashiCorp Terraform
# ===============================================================================

- name: Display OS family
  ansible.builtin.debug:
    msg: "Detected OS family: {{ ansible_os_family }}, Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"

- name: Check if Terraform is already installed
  ansible.builtin.command: terraform version
  register: terraform_check
  changed_when: false
  failed_when: false

- name: Display current Terraform version if installed
  ansible.builtin.debug:
    msg: "Terraform is already installed: {{ terraform_check.stdout_lines[0] }}"
  when: terraform_check.rc == 0

- name: Install Terraform (RedHat/Rocky/CentOS/Fedora)
  when: ansible_os_family == "RedHat" and terraform_check.rc != 0
  block:
    - name: Determine repository version
      ansible.builtin.set_fact:
        terraform_repo_version: "{{ '9' if (ansible_distribution_major_version | int) >= 10 else ansible_distribution_major_version }}"

    - name: Add HashiCorp GPG key
      ansible.builtin.rpm_key:
        key: https://rpm.releases.hashicorp.com/gpg
        state: present

    - name: Add HashiCorp repository
      ansible.builtin.yum_repository:
        name: hashicorp
        description: HashiCorp Stable - $basearch
        baseurl: "https://rpm.releases.hashicorp.com/RHEL/{{ terraform_repo_version }}/$basearch/stable"
        enabled: true
        gpgcheck: true
        gpgkey: https://rpm.releases.hashicorp.com/gpg

    - name: Display repository version being used
      ansible.builtin.debug:
        msg: "Using HashiCorp repository for RHEL {{ terraform_repo_version }}"

    - name: Try to install Terraform from HashiCorp repo
      ansible.builtin.dnf:
        name: terraform
        state: present
      register: terraform_repo_install
      ignore_errors: true

    - name: Install Terraform from binary (fallback for unsupported distros)
      when: terraform_repo_install is failed
      block:
        - name: Get latest Terraform version
          ansible.builtin.uri:
            url: https://checkpoint-api.hashicorp.com/v1/check/terraform
            return_content: true
          register: terraform_version_check

        - name: Set Terraform version
          ansible.builtin.set_fact:
            terraform_latest_version: "{{ terraform_version_check.json.current_version }}"

        - name: Download Terraform binary
          ansible.builtin.get_url:
            url: "https://releases.hashicorp.com/terraform/{{ terraform_latest_version }}/terraform_{{ terraform_latest_version }}_linux_amd64.zip"
            dest: "/tmp/terraform.zip"
            mode: '0644'

        - name: Install unzip if not present
          ansible.builtin.package:
            name: unzip
            state: present

        - name: Unzip Terraform binary
          ansible.builtin.unarchive:
            src: "/tmp/terraform.zip"
            dest: "/usr/local/bin"
            remote_src: true
            mode: '0755'

        - name: Remove downloaded zip
          ansible.builtin.file:
            path: "/tmp/terraform.zip"
            state: absent

        - name: Display installation method
          ansible.builtin.debug:
            msg: "Terraform installed from binary (HashiCorp repo not available for this OS version)"

- name: Install Terraform (Debian/Ubuntu)
  when: ansible_os_family == "Debian" and terraform_check.rc != 0
  block:
    - name: Install required packages for repository
      ansible.builtin.apt:
        name:
          - gnupg
          - apt-transport-https
          - ca-certificates
        state: present

    - name: Download HashiCorp GPG key
      ansible.builtin.get_url:
        url: https://apt.releases.hashicorp.com/gpg
        dest: /tmp/hashicorp.asc
        mode: '0644'

    - name: Convert and install HashiCorp GPG key (dearmor for binary format)
      ansible.builtin.shell: |
        gpg --dearmor < /tmp/hashicorp.asc > \
          /usr/share/keyrings/hashicorp-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/hashicorp-archive-keyring.gpg

    - name: Set permissions on GPG keyring
      ansible.builtin.file:
        path: /usr/share/keyrings/hashicorp-archive-keyring.gpg
        mode: '0644'

    - name: Add HashiCorp repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main" # noqa yaml[line-length]
        state: present
        filename: hashicorp

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install Terraform package
      ansible.builtin.apt:
        name: terraform
        state: present

- name: Verify Terraform installation
  ansible.builtin.command: terraform version
  register: terraform_version
  changed_when: false

- name: Display Terraform version
  ansible.builtin.debug:
    msg: "{{ terraform_version.stdout_lines }}"

- name: Enable Terraform autocomplete
  ansible.builtin.shell: |
    terraform -install-autocomplete || true
  become: false
  register: terraform_autocomplete
  changed_when: terraform_autocomplete.rc != 0
  ignore_errors: true
